#!/bin/bash
IMAGE='kbai/grip'
declare -a GRIP_ARGS
declare -a DOCKER_ARGS
GRIP_PORT="6419"
PORT_RANGE="6419:6429"

usage () {
    echo "Usage: $(basename "$0") [options] [grip-options]

Options:
  --help            Use this help
  --lynx            Use lynx text browser
  --elinks          Use elinks text browser
  --ports=FROM:TO   Use first free port in range. Default: '$PORT_RANGE'
  -d --detach       Run in background
  -b --browser      Open in browser"
    docker run "$IMAGE" --help |sed '1,/^Options/d'|grep -v '^\s*-b'
}

port_in_use () {
    local awk_cmd
    # shellcheck disable=SC2016
    printf -v awk_cmd '$6 == "LISTEN" && $4 ~ "%d$"' "$1"
    netstat -aln | awk "$awk_cmd" | grep -q ":$1"
}

while [[ "$1" = -* ]];do
    case "$1" in
        --help) usage; exit ;;
        --lynx|--elinks) OPEN_IN_BROWSER=true; BROWSER="${1:2}" ;;
        --ports*) PORT_RANGE="${1##*=}" ;;
        -b|--browser) OPEN_IN_BROWSER=true ;;
        -d|--detach) DETACH=true ;;
        *) GRIP_ARGS+=("$1") ;;
    esac
    shift
done

# Conflicting options
if [[ -n "$OPEN_IN_BROWSER" && -n "$DETACH" ]];then
    >&2 echo "Opening in browser and --detach are mutually exclusive"
    exit 1
fi

# Search an open port
for i in $(seq "${PORT_RANGE%%:*}" "${PORT_RANGE##*:}");do
    if ! port_in_use "$i";then
        >&2 echo "Using port $i"
        port="$i"
        container="grip_$port"
        break
    fi
done

# No open ports
if [[ -z "$port" ]];then
    >&2 echo "No open ports in range '$PORT_RANGE'"
    exit 1
fi

# Logic to open a browser
if [[ "$OPEN_IN_BROWSER" = true ]];then
    case "$BROWSER" in
        elinks|lynx)
            DOCKER_ARGS+=(--env "BROWSER=$BROWSER")
            DOCKER_ARGS+=(--env "TERM=$TERM")
            DOCKER_ARGS+=(--env "GRIPHOME=/root/.grip-quiet")
            GRIP_ARGS+=(--browser)
            GRIP_ARGS+=(--quiet)
            ;;
        *)
            (sleep 2; python -m webbrowser "http://localhost:$port") &
            ;;
    esac
fi

# Logic for detach
if [[ ! -z "$DETACH" ]];then
    DOCKER_ARGS+=(-d)
else
    DOCKER_ARGS+=(--rm -it)
fi

# Arguments
dir="${1:-$PWD}"
if [[ ! -d "$dir" ]];then
    file=$(basename "$dir")
    dir=$(cd "$(dirname "$dir")";pwd)
fi
DOCKER_ARGS+=(-v "${dir}:/data")
DOCKER_ARGS+=(-p $port:$GRIP_PORT)
DOCKER_ARGS+=(--name "$container")
echo docker run "${DOCKER_ARGS[@]}" "$IMAGE" "${GRIP_ARGS[@]}" "$file" "0.0.0.0:$GRIP_PORT"
docker run "${DOCKER_ARGS[@]}" "$IMAGE" "${GRIP_ARGS[@]}" "$file" "0.0.0.0:$GRIP_PORT"
