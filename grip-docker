#!/bin/bash
IMAGE='kbai/grip'
declare -a GRIP_ARGS
declare -a DOCKER_ARGS
CONTAINER_ADDR="0.0.0.0"
CONTAINER_PORT="6419"
HOST_ADDR="localhost"
HOST_PORT=
HOST_PORT_RANGE="6419:6429"

usage () {
    echo "Usage: $(basename "$0") [options] [grip-options]

Options:
  --help            Use this help
  --lynx            Use lynx text browser
  --elinks          Use elinks text browser
  --ports=FROM:TO   Use first free port in range. Default: '$HOST_PORT_RANGE'
  -d --detach       Run in background
  -b --browser      Open in browser"
    docker run "$IMAGE" --help |sed '1,/^Options/d'|grep -v '^\s*-b'
}

port_in_use () {
    local awk_cmd
    # shellcheck disable=SC2016
    printf -v awk_cmd '$6 == "LISTEN" && $4 ~ "%d$"' "$1"
    netstat -aln | awk "$awk_cmd" | grep -q ":$1"
}

while [[ "$1" = -* ]];do
    case "$1" in
        --help) usage; exit ;;
        --lynx|--elinks) OPEN_IN_CONTAINER=true; BROWSER="${1:2}" ;;
        --ports*) HOST_PORT_RANGE="${1##*=}" ;;
        -b|--browser) OPEN_IN_HOST=true ;;
        -d|--detach) DETACH=true ;;
        *) GRIP_ARGS+=("$1") ;;
    esac
    shift
done

# Conflicting options
if [[ -n "$OPEN_IN_CONTAINER" && -n "$DETACH" ]];then
    >&2 echo "--elinks/--lynx and --detach are mutually exclusive"
    exit 1
fi

# Search an open port
for i in $(seq "${HOST_PORT_RANGE%%:*}" "${HOST_PORT_RANGE##*:}");do
    if ! port_in_use "$i";then
        >&2 echo "Using host port $i"
        HOST_PORT="$i"
        container="grip_$HOST_PORT"
        break
    fi
done

# No open HOST_PORTs
if [[ -z "$HOST_PORT" ]];then
    >&2 echo "No open ports in range '$HOST_PORT_RANGE'"
    exit 1
fi

# Logic to open a browser
if [[ "$OPEN_IN_CONTAINER" = true ]];then
    DOCKER_ARGS+=(--env "BROWSER=$BROWSER")
    DOCKER_ARGS+=(--env "TERM=$TERM")
    DOCKER_ARGS+=(--env "GRIPHOME=/root/.grip-quiet")
    GRIP_ARGS+=(--browser)
    GRIP_ARGS+=(--quiet)
elif [[ "$OPEN_IN_HOST" = true ]];then
    (sleep 2; python -m webbrowser "http://$HOST_ADDR:$HOST_PORT") &
fi

# Logic for detach
if [[ ! -z "$DETACH" ]];then
    DOCKER_ARGS+=(-d)
else
    DOCKER_ARGS+=(--rm -it)
fi

# Arguments
dir="${1:-$PWD}"
if [[ ! -d "$dir" ]];then
    file=$(basename "$dir")
    dir=$(cd "$(dirname "$dir")";pwd)
fi
DOCKER_ARGS+=(-v "${dir}:/data")
DOCKER_ARGS+=(-p $HOST_PORT:$CONTAINER_PORT)
DOCKER_ARGS+=(--name "$container")
echo docker run "${DOCKER_ARGS[@]}" "$IMAGE" "${GRIP_ARGS[@]}" "$file" "${CONTAINER_ADDR}:${CONTAINER_PORT}"
docker run "${DOCKER_ARGS[@]}" "$IMAGE" "${GRIP_ARGS[@]}" "$file" "${CONTAINER_ADDR}:${CONTAINER_PORT}" | \
    sed "s/${CONTAINER_ADDR}:${CONTAINER_PORT}/${HOST_ADDR}:${HOST_PORT}/"
